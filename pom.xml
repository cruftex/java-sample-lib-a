<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.cruftex</groupId>
  <artifactId>java-sample-a</artifactId>
  <packaging>jar</packaging>
  <version>0.1-SNAPSHOT</version>
  <name>java-sample-a</name>
  <description>Simple Java project producing a jar.</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jacoco-maven-plugin-version>0.7.5.201505241946</jacoco-maven-plugin-version>
    <h7e.recycle.test.coverage>jacoco-instrument</h7e.recycle.test.coverage>
    <build.maven.version>3.3.3</build.maven.version>
    <build.java.version>1.8</build.java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- writes out all properties. this is controlling behaviour of additional tools
           e.g. the recycle CI server
        -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>
                ${project.build.directory}/h7e-complete.properties
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${build.maven.version}</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${build.java.version}</version>
                  </requireJavaVersion>
                  <requireOS>
                    <family>unix</family>
                  </requireOS>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
    </plugins>

  </build>

  <profiles>
    <!-- enabling the jacoco agent for running the tests. results are written to target/jacoco.exec -->
    <profile>
      <id>jacoco-instrument</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin-version}</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profile to merge a report for the total test coverage. use it with
         mvn -Pjacoco-merge jacoco:merge jacoco:report -->
    <profile>
      <id>jacoco-merge</id>
      <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin-version}</version>
                <configuration>
                    <fileSets>
                        <fileSet>
                            <directory>${project.basedir}</directory>
                            <includes>
                                <include>**/*.exec</include>
                            </includes>
                        </fileSet>
                    </fileSets>
                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                </configuration>
            </plugin>
        </plugins>
      </build>
    </profile>

    <!--
         profile for doing static analysis, normal report are switched off
         run with: mvn -Pstatic-analysis site
    -->
    <profile>
      <id>static-analysis</id>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.5</version>
            <configuration>
              <skipEmptyReport>false</skipEmptyReport>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>2.8.1</version>
            <reportSets>
              <reportSet>
                <reports>
                  <!-- generate no normal report at all -->
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>fast-test</id>
    </profile>
  </profiles>
  
</project>
